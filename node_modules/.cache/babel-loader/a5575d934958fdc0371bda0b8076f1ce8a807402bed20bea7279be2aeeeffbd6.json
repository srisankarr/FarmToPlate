{"ast":null,"code":"var _jsxFileName = \"D:\\\\clgproject\\\\src\\\\provider\\\\AuthProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthProvider.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [message, setmessage] = useState('');\n  const [isLoggedIn, setLoggedin] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setLoggedin(true);\n      fetchProfile();\n    }\n  }, []);\n  axios.interceptors.request.use(config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n      console.log('triggeerd');\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n  const login = async credentials => {\n    try {\n      // Make a POST request to your backend login endpoint with the provided credentials\n      const response = await axios.post('http://localhost:5000/api/login', credentials);\n      // Assuming the response contains user data upon successful login\n      setUser(response.data.user);\n      setmessage(response.data.message);\n      setLoggedin(true);\n      fetchProfile();\n      localStorage.setItem('token', response.data.token);\n    } catch (error) {\n      console.error('Login error:', error);\n      setmessage(null);\n      // Handle login error (e.g., display error message to the user)\n    }\n  };\n  const signup = async userData => {\n    try {\n      // Make a POST request to your backend signup endpoint with the provided user data\n      const response = await axios.post('http://localhost:5000/api/signup', userData);\n      // Assuming the response contains user data upon successful signup\n      setUser(response.data.user);\n      setLoggedin(true);\n      setmessage(response.data.message);\n      console.log(response.data.message);\n      localStorage.setItem('token', response.data.token);\n      fetchProfile();\n    } catch (error) {\n      console.error('Signup error:', error);\n      setmessage(null);\n      // Handle signup error (e.g., display error message to the user)\n    }\n  };\n  const logout = async () => {\n    try {\n      // Make a POST request to your backend logout endpoint to invalidate the user session\n      await axios.post('http://localhost:5000/api/logout');\n      // Clear the user state upon successful logout\n      setUser(null);\n      localStorage.removeItem('token');\n      setLoggedin(false);\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Handle logout error (e.g., display error message to the user)\n    }\n  };\n  const fetchProfile = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/profile', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setUser(response.data);\n    } catch (error) {\n      console.error('profile error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      signup,\n      logout,\n      message,\n      isLoggedIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"T3F4+KwD0Pdd9ZAyi9PNERGdzis=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","message","setmessage","isLoggedIn","setLoggedin","token","localStorage","getItem","defaults","headers","common","fetchProfile","interceptors","request","use","config","Authorization","console","log","error","Promise","reject","login","credentials","response","post","data","setItem","signup","userData","logout","removeItem","get","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/clgproject/src/provider/AuthProvider.js"],"sourcesContent":["// AuthProvider.js\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [message,setmessage]=useState('');\r\n  const [isLoggedIn,setLoggedin]=useState(false);\r\n\r\n  useEffect(()=>{\r\n    const token=localStorage.getItem('token');\r\n    if(token){\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setLoggedin(true);\r\n      fetchProfile();\r\n    }\r\n  },[]);\r\n\r\n  axios.interceptors.request.use(\r\n    (config) => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n        console.log('triggeerd')\r\n      }\r\n      return config;\r\n    },\r\n    (error) => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n\r\n\r\n\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      // Make a POST request to your backend login endpoint with the provided credentials\r\n      const response = await axios.post('http://localhost:5000/api/login', credentials);\r\n      // Assuming the response contains user data upon successful login\r\n      setUser(response.data.user);\r\n      setmessage(response.data.message);\r\n      setLoggedin(true);\r\n      fetchProfile();\r\n      localStorage.setItem('token', response.data.token);\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      setmessage(null);\r\n      // Handle login error (e.g., display error message to the user)\r\n \r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    try {\r\n      // Make a POST request to your backend signup endpoint with the provided user data\r\n      const response = await axios.post('http://localhost:5000/api/signup', userData);\r\n      // Assuming the response contains user data upon successful signup\r\n      setUser(response.data.user);\r\n      setLoggedin(true);\r\n      setmessage(response.data.message);\r\n      console.log(response.data.message);\r\n      localStorage.setItem('token', response.data.token);\r\n      fetchProfile();\r\n    } catch (error) {\r\n      console.error('Signup error:', error);\r\n      setmessage(null);\r\n      // Handle signup error (e.g., display error message to the user)\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      // Make a POST request to your backend logout endpoint to invalidate the user session\r\n      await axios.post('http://localhost:5000/api/logout');\r\n      // Clear the user state upon successful logout\r\n      setUser(null);\r\n      localStorage.removeItem('token');\r\n      setLoggedin(false);\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n      // Handle logout error (e.g., display error message to the user)\r\n    }\r\n  };\r\n\r\n\r\n  const fetchProfile = async() =>{\r\n\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/profile', {\r\n        headers: {\r\n          Authorization:`Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n      setUser( response.data);\r\n    } \r\n      catch (error) {\r\n        console.error('profile error:', error);\r\n      }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, signup, logout,message,isLoggedIn}}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}