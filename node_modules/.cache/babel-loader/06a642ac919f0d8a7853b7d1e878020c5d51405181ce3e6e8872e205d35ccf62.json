{"ast":null,"code":"var _jsxFileName = \"D:\\\\clgproject\\\\src\\\\components\\\\navbar\\\\resetpass.js\",\n  _s = $RefreshSig$();\n// ResetPassword.js\nimport React, { useEffect, useState } from 'react';\nimport { useAuth } from '../../provider/AuthProvider';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const {\n    resetPassword,\n    message,\n    resetRedirectToResetPassword\n  } = useAuth();\n  useEffect(() => {\n    resetRedirectToResetPassword();\n  }, [resetRedirectToResetPassword]);\n  const handleResetPassword = async () => {\n    if (newPassword !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n    await resetPassword(email, newPassword, confirmPassword);\n  };\n  if (message === 'Password reset successfully') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blur-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-password-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reset-password-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New Password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetPassword,\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"sKuKTyXDE07OHvFmLc5EyuE6PU0=\", false, function () {\n  return [useAuth];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useEffect","useState","useAuth","Navigate","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","newPassword","setNewPassword","confirmPassword","setConfirmPassword","resetPassword","message","resetRedirectToResetPassword","handleResetPassword","alert","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/clgproject/src/components/navbar/resetpass.js"],"sourcesContent":["// ResetPassword.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useAuth } from '../../provider/AuthProvider';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ResetPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const { resetPassword, message,resetRedirectToResetPassword } = useAuth();\r\n\r\n\r\n  useEffect(()=> {\r\n    resetRedirectToResetPassword();\r\n  },[ resetRedirectToResetPassword]);\r\n \r\n  const handleResetPassword = async () => {\r\n    if (newPassword !== confirmPassword) {\r\n      alert(\"Passwords don't match\");\r\n      return;\r\n    }\r\n    await resetPassword(email, newPassword, confirmPassword);\r\n  };\r\n\r\n  if(message==='Password reset successfully'){\r\n    return <Navigate to='/login' />\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"blur-background\">\r\n    <div  className=\"reset-password-container\">\r\n      <h2>Reset Password</h2>\r\n      <div className='reset-password-form'>\r\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"New Password\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\r\n      <button onClick={handleResetPassword}>Reset Password</button>\r\n      {message && <p>{message}</p>}\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}